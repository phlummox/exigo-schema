sudo: true
language: haskell
os: linux

git:
  depth: 5

cache:
  directories:
  - "$HOME/.ghc"
  - "$HOME/.cabal"
  - "$HOME/.stack"
  - "$TRAVIS_BUILD_DIR/.stack-work"

env:
  global:
    - PATH="$HOME/.cabal/bin:$HOME/.local/bin:$PATH"

matrix:
  include:
#  - ghc: 8.2.2
#    cabal: "2.4"
#  - ghc: 8.6.5
#    cabal: "2.4"

  - env: BUILD=cabal
    ghc: 8.2.2
    cabal: "2.4"

  #allow_failures:
  #
  #- ghc: 8.2.2
  #  env: STACK_YAML="$TRAVIS_BUILD_DIR/stack-8.2.2.yaml"

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  #  - env: BUILD=stack ARGS=""
  #    compiler: ": #stack default"
  #    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-6 --stack-yaml stack-lts-13.yaml"
    compiler: ": #stack 7.10.3"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-7 --stack-yaml stack-lts-13.yaml"
    compiler: ": #stack 8.0.1"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-14 --stack-yaml stack-lts-13.yaml"
    compiler: ": #stack 8.6.5"
    addons: {apt: {packages: [libgmp-dev]}}

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  set -ex
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    # recent versions of stack fail to work with lts <= 7
    if [[ $ARGS == *"lts-7"* ]]; then
      url=https://github.com/commercialhaskell/stack/releases/download/v1.9.3/stack-1.9.3-linux-x86_64.tar.gz
    else
      url=https://get.haskellstack.org/stable/linux-x86_64.tar.gz
    fi
    travis_retry curl -L $url | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi
  stack --version

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config
  set +ex

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  # HLint check
- curl -sSL https://raw.github.com/ndmitchell/neil/master/misc/travis.sh | sh -s -- hlint src
- |
  set -ex
  case "$BUILD" in
    stack)
      # Add in extra-deps for older snapshots, as necessary
      #
      # This is disabled by default, as relying on the solver like this can
      # make builds unreliable. Instead, if you have this situation, it's
      # recommended that you maintain multiple stack-lts-X.yaml files.

      #stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      #  stack --no-terminal $ARGS build cabal-install && \
      #  stack --no-terminal $ARGS solver --update-config)

      # stack.yaml

      # Build the dependencies
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file. Note that
      # this will also implicitly run hpack as necessary to generate
      # the .cabal files needed by cabal-install.
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      # v1-install fails to correctly install happy as required build tool for
      #  haskell-src-exts
      cabal install --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS happy
      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests --ghc-options -O0
        cabal build
        if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
          cabal test
        else
          cabal test --show-details=streaming --log=/dev/stdout
        fi
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex


notifications:
  email: false
